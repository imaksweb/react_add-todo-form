{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","currentUser","usersFromServer","find","cn","TodoList","todos","map","App","useState","todosFromServer","setTodos","newTodoTitle","setNewTodoTitle","hasTitleError","setHasTitleError","selectedUserId","setSelectedUser","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","newTodo","Date","now","trim","currentTodos","type","value","onChange","inputValue","target","length","selectedValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"8MAAe,GACb,CACEA,GAAI,EACJC,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEH,GAAI,GACJC,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEH,GAAI,EACJC,MAAO,qCACPC,WAAW,EACXC,OAAQ,ICjBG,GACb,CACEH,GAAI,EACJI,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEN,GAAI,EACJI,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEN,GAAI,EACJI,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEN,GAAI,EACJI,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEN,GAAI,EACJI,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEN,GAAI,EACJI,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEN,GAAI,EACJI,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEN,GAAI,EACJI,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEN,GAAI,EACJI,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEN,GAAI,GACJI,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,uBCpDEC,EAAsB,SAAC,GAAD,QAAGC,KAAQJ,EAAX,EAAWA,KAAME,EAAjB,EAAiBA,MAAjB,OACjC,mBAAGG,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGF,KCCQO,EAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAElCZ,EAIEY,EAJFZ,GACAC,EAGEW,EAHFX,MACAC,EAEEU,EAFFV,UACAC,EACES,EADFT,OAGIU,EAAcC,EAAgBC,MAAK,SAAAP,GAAI,OAAIA,EAAKR,KAAOG,MAAW,KAExE,OACE,0BACE,UAASH,EAETS,UAAWO,IACT,WACA,CAAE,sBAAuBd,IAL7B,UAQE,oBAAIO,UAAU,kBAAd,SACGR,IAGFY,GACC,cAAC,EAAD,CAAUL,KAAMK,MAXbb,ICfEiB,EAAsB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpC,OACE,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAAAP,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKZ,UCJ3BoB,EAAM,WACjB,MAA0BC,mBAAiBC,GAA3C,mBAAOJ,EAAP,KAAcK,EAAd,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA0CN,mBAAS,GAAnD,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAA4CR,oBAAS,GAArD,mBAAOS,EAAP,KAAuBC,EAAvB,KA+BA,OACE,sBAAKtB,UAAU,MAAf,UACE,+CAEA,uBACEuB,OAAO,aACPC,OAAO,OACPC,SA/BmB,SAACC,GACxBA,EAAMC,iBAEN,IAAMC,EAAU,CACdrC,GAAIsC,KAAKC,MACTtC,MAAOuB,EACPtB,WAAW,EACXC,OAAQyB,GAGNJ,EAAagB,QAAUZ,IACzBL,GAAS,SAAAkB,GAAY,4BAAQA,GAAR,CAAsBJ,OAf7CZ,EAAgB,IAChBI,EAAgB,IAkBXL,EAAagB,QAChBb,GAAiB,GAGdC,GACHG,GAAkB,IAQlB,UAKE,sBAAKtB,UAAU,QAAf,UACE,uBACEiC,KAAK,OACL,UAAQ,aACRC,MAAOnB,EACPoB,SAAU,SAAAT,GACR,IAAMU,EAAaV,EAAMW,OAAOH,MAEhClB,EAAgBoB,GAEZA,EAAWL,OAAOO,QAAU,EAC9BpB,GAAiB,GAEjBA,GAAiB,MAItBD,GACC,sBAAMjB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRkC,MAAOf,EACPgB,SAAU,SAAAT,GACR,IAAMa,GAAiBb,EAAMW,OAAOH,MAEpCd,EAAgBmB,GAGdjB,EADoB,IAAlBiB,IARR,UAeE,wBAAQL,MAAM,IAAIM,UAAQ,EAA1B,2BAECnC,EAAgBK,KAAI,gBAAGnB,EAAH,EAAGA,GAAII,EAAP,EAAOA,KAAP,OACnB,wBAAQuC,MAAO3C,EAAf,SAA6BI,GAALJ,SAI3B8B,GACC,sBAAMrB,UAAU,QAAhB,qCAIJ,wBAAQiC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAUxB,MAAOA,QCzGvBgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.19c06e0b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user: { name, email } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const currentUser = usersFromServer.find(user => user.id === userId) || null;\n\n  return (\n    <article\n      data-id={id}\n      key={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {currentUser && (\n        <UserInfo user={currentUser} />\n      )}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './react-app-env';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [selectedUserId, setSelectedUser] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const clearForm = () => {\n    setNewTodoTitle('');\n    setSelectedUser(0);\n  };\n\n  const handleSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newTodo = {\n      id: Date.now(),\n      title: newTodoTitle,\n      completed: false,\n      userId: selectedUserId,\n    };\n\n    if (newTodoTitle.trim() && selectedUserId) {\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n      clearForm();\n    }\n\n    if (!newTodoTitle.trim()) {\n      setHasTitleError(true);\n    }\n\n    if (!selectedUserId) {\n      setHasUserIdError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={newTodoTitle}\n            onChange={event => {\n              const inputValue = event.target.value;\n\n              setNewTodoTitle(inputValue);\n\n              if (inputValue.trim().length <= 0) {\n                setHasTitleError(true);\n              } else {\n                setHasTitleError(false);\n              }\n            }}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={event => {\n              const selectedValue = +event.target.value;\n\n              setSelectedUser(selectedValue);\n\n              if (selectedValue === 0) {\n                setHasUserIdError(true);\n              } else {\n                setHasUserIdError(false);\n              }\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option value={id} key={id}>{name}</option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}